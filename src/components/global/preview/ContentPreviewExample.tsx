import React from 'react';
import ContentPreview from './ContentPreview';
import { LevelHierarchy } from '@/types/LevelHierarchy';

// Ã–rnek veri yapÄ±sÄ±
const sampleLevelHierarchyData: LevelHierarchy = [
  {
    id: 'group-1',
    title: 'Temel JavaScript KavramlarÄ±',
    order: 1,
    levels: [
      {
        id: 'level-1-1',
        title: 'DeÄŸiÅŸkenler ve Veri Tipleri',
        icon_key: 'variable',
        icon_family: 'material',
        xp_reward: 100,
        order: 1,
        components: [
          {
            id: 'comp-1-1-1',
            type: 'text_explanation',
            display_name: 'String DeÄŸiÅŸkenler',
            content: {
              title: 'String Veri Tipi',
              description: 'JavaScript\'te metinsel verileri saklamak iÃ§in kullanÄ±lÄ±r.',
              examples: ['let name = "Ahmet";', 'let message = `Merhaba ${name}`;']
            },
            order: 1
          },
          {
            id: 'comp-1-1-2',
            type: 'code_example',
            display_name: 'Number Ã–rnekleri',
            content: {
              code: 'let age = 25;\nlet price = 19.99;\nconsole.log(age + price);',
              language: 'javascript',
              explanation: 'SayÄ±sal deÄŸerlerin tanÄ±mlanmasÄ± ve kullanÄ±mÄ±'
            },
            order: 2
          },
          {
            id: 'comp-1-1-3',
            type: 'interactive_quiz',
            display_name: 'Boolean Quiz',
            content: {
              question: 'AÅŸaÄŸÄ±daki boolean deÄŸerlerinden hangisi doÄŸrudur?',
              options: ['true', 'false', '1', '0'],
              correct_answer: 'true',
              explanation: 'Boolean veri tipi sadece true veya false deÄŸerlerini alabilir.'
            },
            order: 3
          }
        ]
      },
      {
        id: 'level-1-2',
        title: 'Fonksiyonlar',
        icon_key: 'function',
        icon_family: 'material',
        xp_reward: 150,
        order: 2,
        components: [
          {
            id: 'comp-1-2-1',
            type: 'video_tutorial',
            display_name: 'Fonksiyon TanÄ±mlama',
            content: {
              video_url: 'https://example.com/video1.mp4',
              duration: 300,
              description: 'JavaScript\'te fonksiyon tanÄ±mlama yÃ¶ntemleri'
            },
            order: 1
          },
          {
            id: 'comp-1-2-2',
            type: 'coding_exercise',
            display_name: 'Hesaplama Fonksiyonu',
            content: {
              instruction: 'Ä°ki sayÄ±yÄ± toplayÄ±p sonucu dÃ¶ndÃ¼ren bir fonksiyon yazÄ±n.',
              starter_code: 'function add(a, b) {\n  // kodunuzu buraya yazÄ±n\n}',
              test_cases: [
                { input: [2, 3], expected: 5 },
                { input: [10, 15], expected: 25 }
              ]
            },
            order: 2
          }
        ]
      }
    ]
  },
  {
    id: 'group-2',
    title: 'React Temelleri',
    order: 2,
    levels: [
      {
        id: 'level-2-1',
        title: 'Component YapÄ±sÄ±',
        icon_key: 'component',
        icon_family: 'react',
        xp_reward: 200,
        order: 1,
        components: [
          {
            id: 'comp-2-1-1',
            type: 'text_explanation',
            display_name: 'Functional Components',
            content: {
              title: 'React Functional Components',
              description: 'Modern React uygulamalarÄ±nda en Ã§ok kullanÄ±lan component tipi.',
              key_points: [
                'Fonksiyon olarak tanÄ±mlanÄ±r',
                'JSX dÃ¶ndÃ¼rÃ¼r',
                'Hooks kullanabilir'
              ]
            },
            order: 1
          },
          {
            id: 'comp-2-1-2',
            type: 'code_example',
            display_name: 'Ä°lk React Component',
            content: {
              code: 'import React from \'react\';\n\nfunction Welcome(props) {\n  return <h1>Merhaba, {props.name}!</h1>;\n}\n\nexport default Welcome;',
              language: 'javascript',
              explanation: 'Basit bir React functional component Ã¶rneÄŸi'
            },
            order: 2
          }
        ]
      }
    ]
  },
  {
    id: 'group-3',
    title: 'Ä°leri Seviye Konular',
    order: 3,
    levels: [
      {
        id: 'level-3-1',
        title: 'State Management',
        icon_key: 'state',
        icon_family: 'material',
        xp_reward: 300,
        order: 1,
        components: [] // BoÅŸ seviye Ã¶rneÄŸi
      }
    ]
  }
];

// Ana Ã¶rnek component
const ContentPreviewExample: React.FC = () => {
  return (
    <div className="min-h-screen bg-gray-50 p-6">
      <div className="max-w-7xl mx-auto">
        <div className="mb-8">
          <h1 className="text-3xl font-bold text-gray-900 mb-4">
            ContentPreview BileÅŸeni - Ã–rnek KullanÄ±m
          </h1>
          <p className="text-gray-600 mb-6">
            Bu sayfa ContentPreview bileÅŸeninin nasÄ±l kullanÄ±lacaÄŸÄ±nÄ± gÃ¶sterir. 
            AÅŸaÄŸÄ±da hierarchical eÄŸitim iÃ§eriÄŸinin nasÄ±l render edildiÄŸini inceleyebilirsiniz.
          </p>
          
          <div className="bg-blue-50 border border-blue-200 rounded-lg p-4 mb-6">
            <h3 className="font-semibold text-blue-900 mb-2">KullanÄ±m Ã–rneÄŸi:</h3>
            <pre className="text-sm text-blue-800 bg-blue-100 p-3 rounded font-mono">
{`import ContentPreview from '@/components/global/ContentPreview';
import { LevelHierarchy } from '@/types/LevelHierarchy';

// Veri yapÄ±nÄ±z
const data: LevelHierarchy = [...];

// KullanÄ±m
<ContentPreview 
  data={data} 
  title="EÄŸitim Ä°Ã§eriÄŸi" 
  allowMultipleOpen={true} 
/>`}
            </pre>
          </div>
        </div>

        {/* Ana ContentPreview BileÅŸeni */}
        <ContentPreview 
          data={sampleLevelHierarchyData}
          title="Ã–rnek EÄŸitim Platformu Ä°Ã§eriÄŸi"
          allowMultipleOpen={true}
          className="mb-8"
        />

        {/* Veri YapÄ±sÄ± AÃ§Ä±klamasÄ± */}
        <div className="bg-white rounded-xl shadow-lg border border-gray-200 p-6">
          <h2 className="text-xl font-bold text-gray-900 mb-4">Veri YapÄ±sÄ± HiyerarÅŸisi</h2>
          <div className="space-y-4 text-sm text-gray-600">
            <div className="bg-purple-50 p-4 rounded-lg border-l-4 border-purple-400">
              <h4 className="font-semibold text-purple-900 mb-2">ğŸ“š Level Groups (Seviye GruplarÄ±)</h4>
              <p>Ana kategoriler. Ã–rnek: "Temel JavaScript KavramlarÄ±", "React Temelleri"</p>
            </div>
            <div className="bg-blue-50 p-4 rounded-lg border-l-4 border-blue-400 ml-6">
              <h4 className="font-semibold text-blue-900 mb-2">ğŸ“‹ Levels (Seviyeler)</h4>
              <p>Grup iÃ§indeki alt konular. Ã–rnek: "DeÄŸiÅŸkenler ve Veri Tipleri", "Fonksiyonlar"</p>
            </div>
            <div className="bg-green-50 p-4 rounded-lg border-l-4 border-green-400 ml-12">
              <h4 className="font-semibold text-green-900 mb-2">ğŸ§© Components (BileÅŸenler)</h4>
              <p>GerÃ§ek eÄŸitim iÃ§erikleri. Ã–rnek: Video, Quiz, Kod Ã–rneÄŸi, AÃ§Ä±klama metni</p>
            </div>
          </div>
        </div>
      </div>
    </div>
  );
};

export default ContentPreviewExample; 